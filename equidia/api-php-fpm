FROM php:7.4-fpm-alpine3.11
# persistent / runtime deps
ENV DOCKERFILE_CONF_PATH ./

ENV PHPIZE_DEPS \
    autoconf \
    cmake \
    file \
    g++ \
    gcc \
    libc-dev \
    pcre-dev \
    make \
    git \
    pkgconf \
    re2c \
    # for GD
    freetype-dev \
    libpng-dev  \
    libjpeg-turbo-dev
RUN apk add --no-cache --virtual .persistent-deps \
    # for intl extension
    icu-dev \
    libxml2-dev \
    # for amqp
    libressl-dev \
    # for GD
    freetype \
    libpng \
    libjpeg-turbo \
    oniguruma-dev 
RUN set -xe \
    # workaround for rabbitmq linking issue
    && ln -s /usr/lib /usr/local/lib64 \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-configure bcmath --enable-bcmath \
    && docker-php-ext-configure intl --enable-intl \
    && docker-php-ext-configure pcntl --enable-pcntl \
    && docker-php-ext-configure pdo_mysql --with-pdo-mysql \
    && docker-php-ext-configure mbstring --enable-mbstring \
    && docker-php-ext-install -j$(nproc) \
        gd \
        bcmath \
        intl \
        pcntl \
        pdo_mysql \
        mbstring \
        iconv
# Copy configuration
COPY ${DOCKERFILE_CONF_PATH}/config/php7.ini /usr/local/etc/php/conf.d/
RUN apk del .build-deps \
    && rm -rf /tmp/* \
    && rm -rf /app \
    && mkdir /app
# Possible values for ext-name:
# bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo filter ftp gd gettext gmp hash iconv imap interbase intl
# json ldap mbstring mcrypt mssql mysql mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql pdo_oci
# pdo_odbc pdo_pgsql pdo_sqlite pgsql phar posix pspell readline recode reflection session shmop simplexml snmp soap
# sockets spl standard sybase_ct sysvmsg sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zip
COPY ${DOCKERFILE_CONF_PATH}/config/php7.ini /usr/local/etc/php/conf.d/
COPY ${DOCKERFILE_CONF_PATH}/config/fpm/php-fpm.conf /usr/local/etc/
COPY ${DOCKERFILE_CONF_PATH}/config/fpm/pool.d /usr/local/etc/pool.d
VOLUME ["/var/www"]
WORKDIR /var/www


RUN apk update && apk add make curl 

RUN curl --insecure https://getcomposer.org/download/1.10.6/composer.phar -o /usr/bin/composer && chmod +x /usr/bin/composer

COPY ${DOCKERFILE_CONF_PATH}/symfony.ini /usr/local/etc/php/conf.d/
ADD ${DOCKERFILE_CONF_PATH}/symfony.ini /etc/php7/php-fpm.d/
ADD ${DOCKERFILE_CONF_PATH}/symfony.ini /etc/php7/cli/conf.d/

COPY ${DOCKERFILE_CONF_PATH}/symfony.pool.conf /usr/local/etc/pool.d/

# Possible values for ext-name:
# bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo filter ftp gd gettext gmp hash iconv imap interbase intl
# json ldap mbstring mcrypt mssql mysql mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql pdo_oci
# pdo_odbc pdo_pgsql pdo_sqlite pgsql phar posix pspell readline recode reflection session shmop simplexml snmp soap
# sockets spl standard sybase_ct sysvmsg sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zip

RUN docker-php-ext-configure iconv
RUN docker-php-ext-install iconv
RUN docker-php-ext-configure xml
RUN docker-php-ext-install xml
RUN docker-php-ext-configure intl
RUN docker-php-ext-install intl


RUN apk add --update libzip-dev
RUN docker-php-ext-configure zip
RUN docker-php-ext-install zip

RUN apk add --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing gnu-libiconv
ENV LD_PRELOAD /usr/lib/preloadable_libiconv.so php

RUN apk add --update mysql mysql-client

RUN apk add --no-cache freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev && \
    docker-php-ext-configure gd --with-freetype --with-jpeg && \
    NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \
    docker-php-ext-install -j${NPROC} gd && \
    apk del --no-cache freetype-dev libpng-dev libjpeg-turbo-dev

RUN docker-php-ext-install mbstring
RUN docker-php-ext-install opcache

WORKDIR /var/www/symfony
EXPOSE 9001

RUN apk update && apk add python py-pip && pip install --upgrade awscli && mkdir -p /root/.aws/

RUN apk add --update --no-cache --virtual .build-dependencies $PHPIZE_DEPS \
        && pecl install apcu \
        && docker-php-ext-enable apcu \
        && pecl clear-cache \
        && apk del .build-dependencies

RUN apk update && apk add bash fcgi

STOPSIGNAL SIGQUIT
